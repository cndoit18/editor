let data_dir = has('nvim') ? stdpath('data') . '/site' : '~/.vim'
if empty(glob(data_dir . '/autoload/plug.vim'))
	silent execute '!curl -fLo '.data_dir.'/autoload/plug.vim --create-dirs  https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim'
	autocmd VimEnter * PlugInstall --sync | source $MYVIMRC
endif

call plug#begin()
" nvim
Plug 'nvim-tree/nvim-web-devicons'
Plug 'rcarriga/nvim-notify'
Plug 'sainnhe/gruvbox-material'
Plug 'nvim-lualine/lualine.nvim'
Plug 'ibhagwan/fzf-lua', {'branch': 'main'}
Plug 'junegunn/fzf', { 'do': { -> fzf#install() } }
Plug 'nvim-neo-tree/neo-tree.nvim', {'branch': 'v3.x'}
Plug 'nvim-lua/plenary.nvim'
Plug 'MunifTanjim/nui.nvim'
Plug 'lewis6991/gitsigns.nvim'
Plug 'akinsho/toggleterm.nvim', {'tag' : '*'}
Plug 'williamboman/mason.nvim'
Plug 'williamboman/mason-lspconfig.nvim'
Plug 'neovim/nvim-lspconfig'
Plug 'hrsh7th/cmp-nvim-lsp'
Plug 'hrsh7th/nvim-cmp'

" vim
Plug 'tpope/vim-eunuch'
Plug 'yegappan/mru'
Plug 'liuchengxu/vista.vim'
Plug 'iamcco/markdown-preview.nvim', { 'do': 'cd app && npx --yes yarn install' }
Plug 'mbbill/undotree'
Plug 'tpope/vim-fugitive'
Plug 'mg979/vim-visual-multi'
Plug 'easymotion/vim-easymotion'
if has('mac')
  Plug 'ybian/smartim'
endif
Plug 'preservim/nerdcommenter'
call plug#end()

lua <<EOF
require('lualine').setup({options = { theme  = 'gruvbox-material' }})
require('neo-tree').setup()
require('gitsigns').setup()
require('toggleterm').setup()
require('mason').setup()
require('mason-lspconfig').setup()
local cmp = require 'cmp'
cmp.setup {
  sources = {
    { name = 'nvim_lsp' },
  },
  mapping = {
['<C-n>'] = cmp.mapping(cmp.mapping.select_next_item()),
['<C-p>'] = cmp.mapping(cmp.mapping.select_prev_item()),
  },
}
local lspconfig = require('lspconfig')
local capabilities = require("cmp_nvim_lsp").default_capabilities()
local servers = { 'lua_ls', 'gopls' }
for _, lsp in ipairs(servers) do
  lspconfig[lsp].setup {
    capabilities = capabilities,
  }
end
EOF


" set
autocmd TermEnter term://*toggleterm#*
      \ tnoremap <silent><c-t> <Cmd>exe v:count1 . "ToggleTerm"<CR>
nnoremap <silent><c-t> <Cmd>exe v:count1 . "ToggleTerm"<CR>

filetype on
syntax enable
set encoding=utf-8
set number
set relativenumber
set cursorline
set nobackup
set nocompatible
set foldmethod=syntax
set foldlevel=99

let g:vista_default_executive = 'coc'
let g:vista#renderer#enable_icon = 0

set list
set listchars=tab:»-,trail:-,eol:↲,extends:»,precedes:«,nbsp:%
set statusline+=%{get(b:,'gitsigns_status','')}

augroup numbertoggle
	autocmd!
	autocmd BufEnter,FocusGained,InsertLeave,WinEnter * if &nu && mode() != "i" | set rnu   | endif
	autocmd BufLeave,FocusLost,InsertEnter,WinLeave   * if &nu                  | set nornu | endif
augroup END

colorscheme gruvbox-material

if has('termguicolors') && ($COLORTERM == 'truecolor' || $COLORTERM == '24bit')
  " enable true color
  set termguicolors
endif


" GoTo code navigation
nmap <silent>K :lua vim.lsp.buf.hover()<CR>
nmap <silent>gd :lua vim.lsp.buf.definition()<CR>
nmap <silent>gy :lua vim.lsp.buf.type_definition()<CR>
nmap <silent>gi :lua vim.lsp.buf.implementation()<CR>
nmap <silent>gr :lua vim.lsp.buf.references()<CR>
nmap <silent>[g :lua vim.diagnostic.goto_prev()<CR>
nmap <silent>]g :lua vim.diagnostic.goto_next()<CR>
nmap <leader>ac :lua vim.lsp.buf.code_action()<CR>

nnoremap <leader>nt :Neotree toggle<CR>
nnoremap <leader>nf :Neotree focus<CR>
nnoremap <F5> :UndotreeToggle<CR>
nnoremap <F8> :Vista!!<CR>

let g:VM_maps = {}
let g:VM_maps["Add Cursor Down"]      = '<C-j>'
let g:VM_maps["Add Cursor Up"]        = '<C-k>'

command! -nargs=? Fold :lua vim.lsp.buf.fold() <f-args>
command! -nargs=? Format :lua vim.lsp.buf.format() <f-args>
autocmd BufEnter *.png,*.jpg,*gif,*pdf exec "! imgcat ".expand("%") | :bw
autocmd BufEnter * if winnr('$') == 1 && bufname() == "__vista__" | execute "normal! :q!\<CR>" | endif

let g:smartim_default = 'com.apple.keylayout.ABC'

if has('persistent_undo')
  set undofile
  set undodir=~/.vim/undodir
  if !isdirectory(&undodir)
    call mkdir(&undodir, 'p', 0700)
  endif
endif

if has('mouse')
  if has('gui_running') || (&term =~ 'xterm' && !has('mac'))
    set mouse=a
  else
    set mouse=nvi
  endif
endif

